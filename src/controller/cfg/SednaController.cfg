#!/usr/bin/env python 
PACKAGE="controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen=ParameterGenerator()


gen.add("depth_input", int_t, 0, "Fake depth input", 100, 0, 500)


gen.add("depth_PID",bool_t,0,"Manual 0 or Auto 1",False)
gen.add("heading_PID",bool_t,0,"Manual 0 or Auto 1",True)
gen.add("pitch_PID",bool_t,0,"Manual 0 or Auto 1",True)
gen.add("roll_PID",bool_t,0,"Manual 0 or Auto 1",False)
gen.add("forward_PID",bool_t,0,"Manual 0 or Auto 1",False)
gen.add("sidemove_PID",bool_t,0,"Manual 0 or Auto 1",True)

gen.add("teleop",bool_t,0,"Manual 0 or Auto 1",False)    
gen.add("hovermode",bool_t,0,"Manual 0 or Auto 1",False)

gen.add("teleop_sidemove_velocity", double_t, 0, "teleop_sidemove_velocity", 100, 0, 1000)
gen.add("teleop_forward_velocity", double_t, 0, "teleop_forward_velocity", 100, 0, 1000)
gen.add("teleop_reverse_velocity", double_t, 0, "teleop_reverse_velocity", 100, 0, 1000)

gen.add("depth_setpoint", double_t, 0, "Setpoint for depth controller", 0, 0, 800)
gen.add("heading_setpoint", double_t, 0, "Setpoint for heading controller", 109, 0, 360)
gen.add("pitch_setpoint", double_t, 0, "Setpoint for pitch controller", 49, -50, 50)
gen.add("roll_setpoint", double_t, 0, "Setpoint for roll controller", 0, -90, 90)

gen.add("depth_offset", double_t, 0, "Place vehicle at sea level first and record offset value", 0, -1, 1500)
gen.add("depth_Kp", double_t, 0, "P const for depth controller", 7.5, 0, 5000)
gen.add("depth_Ti", double_t, 0, "I const for depth controller", 0, 0, 5000)
gen.add("depth_Td", double_t, 0, "D const for depth controller", 0, 0, 5000)
gen.add("depth_min", int_t, 0, "Actuator Min for Depth controller", -400, -3268, 3268)
gen.add("depth_max", int_t, 0, "Actuator Max for Depth controller", 400, -3268, 3268)

gen.add("thruster1_ratio", double_t, 0, "Thruster 1 Ratio", 1, 0,2)
gen.add("thruster2_ratio", double_t, 0, "Thruster 2 Ratio", 1, 0, 2)
gen.add("thruster3_ratio", double_t, 0, "Thruster 3 Ratio", 1, 0, 2)
gen.add("thruster4_ratio", double_t, 0, "Thruster 4 Ratio", 1, 0, 2)
gen.add("thruster5_ratio", double_t, 0, "Thruster 5 Ratio", 1, 0, 2)
gen.add("thruster6_ratio", double_t, 0, "Thruster 6 Ratio", 1, 0, 2)
gen.add("thruster7_ratio", double_t, 0, "Thruster 7 Ratio", 1.14, 0, 2)
gen.add("thruster8_ratio", double_t, 0, "Thruster 8 Ratio", 1.38, 0, 2)

gen.add("thruster1_rev_ratio", double_t, 0, "Thruster 1 Ratio r", 1, 0,2)
gen.add("thruster2_rev_ratio", double_t, 0, "Thruster 2 Ratio r", 1, 0, 2)
gen.add("thruster3_rev_ratio", double_t, 0, "Thruster 3 Ratio r", 1, 0, 2)
gen.add("thruster4_rev_ratio", double_t, 0, "Thruster 4 Ratio r", 1, 0, 2)
gen.add("thruster5_rev_ratio", double_t, 0, "Thruster 5 Ratio r", 1, 0, 2)
gen.add("thruster6_rev_ratio", double_t, 0, "Thruster 6 Ratio r", 1, 0, 2)
gen.add("thruster7_rev_ratio", double_t, 0, "Thruster 7 Ratio r", 0.92, 0, 2)
gen.add("thruster8_rev_ratio", double_t, 0, "Thruster 8 Ratio r", 1.26, 0, 2)


gen.add("pitch_Kp", double_t, 0, "P const for pitch controller", 2, 0, 50000)
gen.add("pitch_Ti", double_t, 0, "I const for pitch controller", 0, 0, 50000)
gen.add("pitch_Td", double_t, 0, "D const for pitch controller", 0, 0, 50000)
gen.add("pitch_min", int_t, 0, "Actuator Min for Pitch controller", -350, -3268, 3268)
gen.add("pitch_max", int_t, 0, "Actuator Max for Pitch controller",350, -3268, 3268)

gen.add("heading_Kp", double_t, 0, "P const for heading controller", 1.9, 0, 10000)
gen.add("heading_Ti", double_t, 0, "I const for heading controller", 6555, 0, 100000)
gen.add("heading_Td", double_t, 0, "D const for heading controller",0, 0, 10000)
gen.add("heading_min", int_t, 0, "Actuator Min for Heading controller", -255, -3260, 3260)
gen.add("heading_max", int_t, 0, "Actuator Max for Heading controller",255, -3268, 3268)

gen.add("roll_Kp", double_t, 0, "P const for roll controller", 3, 0, 50000)
gen.add("roll_Ti", double_t, 0, "I const for roll controller", 0, 0, 50000)
gen.add("roll_Td", double_t, 0, "D const for roll controller", 50, 0, 50000)
gen.add("roll_min", int_t, 0, "Actuator Min for roll controller", -350, -3268, 3268)
gen.add("roll_max", int_t, 0, "Actuator Max for roll controller",350, -3268, 3268)

gen.add("forward_Kp", double_t, 0, "P const for forward controller", 1.5, 0, 100000)
gen.add("forward_Ti", double_t, 0, "I const for forward controller", 4000, 0, 10000)
gen.add("forward_Td", double_t, 0, "D const for forward controller", 0, 0, 10000)
gen.add("forward_min", int_t, 0, "Actuator Min for Forward controller", -160, -3268, 3268)
gen.add("forward_max", int_t, 0, "Actuator Max for Forward controller", 160, -3268, 3268)

gen.add("sidemove_Kp", double_t, 0, "P const for sidemove controller",1.5, 0, 100000)
gen.add("sidemove_Ti", double_t, 0, "I const for sidemove controller", 5000, 0, 10000)
gen.add("sidemove_Td", double_t, 0, "D const for sidemove controller", 0, 0, 10000)
gen.add("sidemove_min", int_t, 0, "Actuator Min for Sway controller", -150, -3268, 3268)
gen.add("sidemove_max", int_t, 0, "Actuator Max for Sway controller", 150, -3268, 3268)


exit(gen.generate(PACKAGE, "controller", "controller"))
















